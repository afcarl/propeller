{
    "AWSTemplateFormatVersion" : "2010-09-09",
    
    "Description" : "AWS CloudFormation with Redis server, web frontend and GPU based image processing backend.",

    "Parameters" : {
	"Owner": {
	    "Type": "String",
	    "Default": "axel.tidemann@telenor.com",
	    "Description": "Owner's email address."
	},
	"ClusterNodeType" : {
	    "Type" : "String",
	    "Description" : "The compute and memory capacity of the nodes in the Redis Cluster",
	    "Default" : "cache.r3.large"
	},
	"KeyName": {
	    "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the web server",
	    "Type": "AWS::EC2::KeyPair::KeyName",
	    "Default": "axelkey"
	},
	"WebInstanceType" : {
	    "Description" : "WebServer EC2 instance type",
	    "Type" : "String",
	    "Default" : "m1.small"
	},
	"WebImageId": {
	    "Type": "String",
	    "Default": "ami-b82176d2",
	    "Description": "Image for the web instance running the frontend."
	},
	"GPUImageId": {
	    "Type": "String",
	    "Default": "ami-a41147ce",
	    "Description": "Image for the GPU instance running TensorFlow."
	},
	"GPUInstanceType": {
	    "Type": "String",
	    "Default": "g2.2xlarge",
	    "Description": "EC2 instance type to use, should be GPU instance."
	},
	"Service": {
	    "Type": "String",
	    "Default": "TensorFlow image recognition",
	    "Description": "Name for the service."
	},
	"Environment": {
	    "Type": "String",
	    "Default": "test",
	    "AllowedValues": ["test", "staging", "production"],
	    "Description": "Test, staging or production."
	},
	"SSHLocation" : {
	    "Description" : "The IP address range that can be used to SSH to the EC2 instances",
	    "Type": "String",
	    "MinLength": "9",
	    "MaxLength": "18",
	    "Default": "0.0.0.0/0",
	    "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
	    "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
	}  
    },
    "Mappings" : {
	"AWSInstanceType2Arch" : {
	    "t1.micro"    : { "Arch" : "PV64"   },
	    "t2.micro"    : { "Arch" : "HVM64"  },
	    "t2.small"    : { "Arch" : "HVM64"  },
	    "t2.medium"   : { "Arch" : "HVM64"  },
	    "m1.small"    : { "Arch" : "PV64"   },
	    "m1.medium"   : { "Arch" : "PV64"   },
	    "m1.large"    : { "Arch" : "PV64"   },
	    "m1.xlarge"   : { "Arch" : "PV64"   },
	    "m2.xlarge"   : { "Arch" : "PV64"   },
	    "m2.2xlarge"  : { "Arch" : "PV64"   },
	    "m2.4xlarge"  : { "Arch" : "PV64"   },
	    "m3.medium"   : { "Arch" : "HVM64"  },
	    "m3.large"    : { "Arch" : "HVM64"  },
	    "m3.xlarge"   : { "Arch" : "HVM64"  },
	    "m3.2xlarge"  : { "Arch" : "HVM64"  },
	    "c1.medium"   : { "Arch" : "PV64"   },
	    "c1.xlarge"   : { "Arch" : "PV64"   },
	    "c3.large"    : { "Arch" : "HVM64"  },
	    "c3.xlarge"   : { "Arch" : "HVM64"  },
	    "c3.2xlarge"  : { "Arch" : "HVM64"  },
	    "c3.4xlarge"  : { "Arch" : "HVM64"  },
	    "c3.8xlarge"  : { "Arch" : "HVM64"  },
	    "c4.large"    : { "Arch" : "HVM64"  },
	    "c4.xlarge"   : { "Arch" : "HVM64"  },
	    "c4.2xlarge"  : { "Arch" : "HVM64"  },
	    "c4.4xlarge"  : { "Arch" : "HVM64"  },
	    "c4.8xlarge"  : { "Arch" : "HVM64"  },
	    "g2.2xlarge"  : { "Arch" : "HVMG2"  },
	    "r3.large"    : { "Arch" : "HVM64"  },
	    "r3.xlarge"   : { "Arch" : "HVM64"  },
	    "r3.2xlarge"  : { "Arch" : "HVM64"  },
	    "r3.4xlarge"  : { "Arch" : "HVM64"  },
	    "r3.8xlarge"  : { "Arch" : "HVM64"  },
	    "i2.xlarge"   : { "Arch" : "HVM64"  },
	    "i2.2xlarge"  : { "Arch" : "HVM64"  },
	    "i2.4xlarge"  : { "Arch" : "HVM64"  },
	    "i2.8xlarge"  : { "Arch" : "HVM64"  },
	    "d2.xlarge"   : { "Arch" : "HVM64"  },
	    "d2.2xlarge"  : { "Arch" : "HVM64"  },
	    "d2.4xlarge"  : { "Arch" : "HVM64"  },
	    "d2.8xlarge"  : { "Arch" : "HVM64"  },
	    "hi1.4xlarge" : { "Arch" : "HVM64"  },
	    "hs1.8xlarge" : { "Arch" : "HVM64"  },
	    "cr1.8xlarge" : { "Arch" : "HVM64"  },
	    "cc2.8xlarge" : { "Arch" : "HVM64"  }
	},

	"AWSInstanceType2NATArch" : {
	    "t1.micro"    : { "Arch" : "NATPV64"   },
	    "t2.micro"    : { "Arch" : "NATHVM64"  },
	    "t2.small"    : { "Arch" : "NATHVM64"  },
	    "t2.medium"   : { "Arch" : "NATHVM64"  },
	    "m1.small"    : { "Arch" : "NATPV64"   },
	    "m1.medium"   : { "Arch" : "NATPV64"   },
	    "m1.large"    : { "Arch" : "NATPV64"   },
	    "m1.xlarge"   : { "Arch" : "NATPV64"   },
	    "m2.xlarge"   : { "Arch" : "NATPV64"   },
	    "m2.2xlarge"  : { "Arch" : "NATPV64"   },
	    "m2.4xlarge"  : { "Arch" : "NATPV64"   },
	    "m3.medium"   : { "Arch" : "NATHVM64"  },
	    "m3.large"    : { "Arch" : "NATHVM64"  },
	    "m3.xlarge"   : { "Arch" : "NATHVM64"  },
	    "m3.2xlarge"  : { "Arch" : "NATHVM64"  },
	    "c1.medium"   : { "Arch" : "NATPV64"   },
	    "c1.xlarge"   : { "Arch" : "NATPV64"   },
	    "c3.large"    : { "Arch" : "NATHVM64"  },
	    "c3.xlarge"   : { "Arch" : "NATHVM64"  },
	    "c3.2xlarge"  : { "Arch" : "NATHVM64"  },
	    "c3.4xlarge"  : { "Arch" : "NATHVM64"  },
	    "c3.8xlarge"  : { "Arch" : "NATHVM64"  },
	    "c4.large"    : { "Arch" : "NATHVM64"  },
	    "c4.xlarge"   : { "Arch" : "NATHVM64"  },
	    "c4.2xlarge"  : { "Arch" : "NATHVM64"  },
	    "c4.4xlarge"  : { "Arch" : "NATHVM64"  },
	    "c4.8xlarge"  : { "Arch" : "NATHVM64"  },
	    "g2.2xlarge"  : { "Arch" : "NATHVMG2"  },
	    "r3.large"    : { "Arch" : "NATHVM64"  },
	    "r3.xlarge"   : { "Arch" : "NATHVM64"  },
	    "r3.2xlarge"  : { "Arch" : "NATHVM64"  },
	    "r3.4xlarge"  : { "Arch" : "NATHVM64"  },
	    "r3.8xlarge"  : { "Arch" : "NATHVM64"  },
	    "i2.xlarge"   : { "Arch" : "NATHVM64"  },
	    "i2.2xlarge"  : { "Arch" : "NATHVM64"  },
	    "i2.4xlarge"  : { "Arch" : "NATHVM64"  },
	    "i2.8xlarge"  : { "Arch" : "NATHVM64"  },
	    "d2.xlarge"   : { "Arch" : "NATHVM64"  },
	    "d2.2xlarge"  : { "Arch" : "NATHVM64"  },
	    "d2.4xlarge"  : { "Arch" : "NATHVM64"  },
	    "d2.8xlarge"  : { "Arch" : "NATHVM64"  },
	    "hi1.4xlarge" : { "Arch" : "NATHVM64"  },
	    "hs1.8xlarge" : { "Arch" : "NATHVM64"  },
	    "cr1.8xlarge" : { "Arch" : "NATHVM64"  },
	    "cc2.8xlarge" : { "Arch" : "NATHVM64"  }
	}
	,
	"AWSRegionArch2AMI" : {
	    "us-east-1"        : {"PV64" : "ami-5fb8c835", "HVM64" : "ami-60b6c60a", "HVMG2" : "ami-e998ea83"},
	    "us-west-2"        : {"PV64" : "ami-d93622b8", "HVM64" : "ami-f0091d91", "HVMG2" : "ami-315f4850"},
	    "us-west-1"        : {"PV64" : "ami-56ea8636", "HVM64" : "ami-d5ea86b5", "HVMG2" : "ami-943956f4"},
	    "eu-west-1"        : {"PV64" : "ami-95e33ce6", "HVM64" : "ami-bff32ccc", "HVMG2" : "ami-83fd23f0"},
	    "eu-central-1"     : {"PV64" : "ami-794a5915", "HVM64" : "ami-bc5b48d0", "HVMG2" : "ami-ba1a09d6"},
	    "ap-northeast-1"   : {"PV64" : "ami-393c1957", "HVM64" : "ami-383c1956", "HVMG2" : "ami-08e5c166"},
	    "ap-southeast-1"   : {"PV64" : "ami-34bd7a57", "HVM64" : "ami-c9b572aa", "HVMG2" : "ami-5a15d239"},
	    "ap-southeast-2"   : {"PV64" : "ami-ced887ad", "HVM64" : "ami-48d38c2b", "HVMG2" : "ami-0c1a446f"},
	    "sa-east-1"        : {"PV64" : "ami-7d15ad11", "HVM64" : "ami-6817af04", "HVMG2" : "NOT_SUPPORTED"},
	    "cn-north-1"       : {"PV64" : "ami-18ac6575", "HVM64" : "ami-43a36a2e", "HVMG2" : "NOT_SUPPORTED"}
	}
	,
	"Region2Principal" : {
	    "us-east-1"      : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
	    "us-west-2"      : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
	    "us-west-1"      : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
	    "eu-west-1"      : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
	    "ap-southeast-1" : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
	    "ap-northeast-1" : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
	    "ap-southeast-2" : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
	    "sa-east-1"      : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" },
	    "cn-north-1"     : { "EC2Principal" : "ec2.amazonaws.com.cn", "OpsWorksPrincipal" : "opsworks.amazonaws.com.cn" },
	    "eu-central-1"   : { "EC2Principal" : "ec2.amazonaws.com", "OpsWorksPrincipal" : "opsworks.amazonaws.com" }
	}
	,
	"RegionToAZ": {
	    "us-east-1": {"AZ": ["us-east-1b"]}
	}
    },

    "Resources" : {   
	"RedisCluster" : {
	    "Type": "AWS::ElastiCache::CacheCluster",
	    "Properties": {
		"CacheNodeType"           : { "Ref" : "ClusterNodeType" },
		"CacheSecurityGroupNames" : [ { "Ref" : "RedisClusterSecurityGroup" } ],
		"Engine"                  : "redis",
		"NumCacheNodes"           : "1"
	    }
	},
	"RedisClusterSecurityGroup": {
	    "Type": "AWS::ElastiCache::SecurityGroup",
	    "Properties": {
		"Description"  : "Lock the cluster down"
	    }
	},
	"RedisClusterSecurityGroupIngress": {
	    "Type": "AWS::ElastiCache::SecurityGroupIngress",
	    "Properties": {
		"CacheSecurityGroupName"  : { "Ref" : "RedisClusterSecurityGroup" },
		"EC2SecurityGroupName"    : { "Ref" : "WebServerSecurityGroup" }
	    }        
	},
	"WebServerRole": {
	    "Type": "AWS::IAM::Role",
	    "Properties" : {
		"AssumeRolePolicyDocument" : {
		    "Statement"  : [{
			"Effect"   : "Allow",
			"Principal": { "Service": [{ "Fn::FindInMap" : ["Region2Principal", {"Ref" : "AWS::Region"}, "EC2Principal"]}] },
			"Action"   : [ "sts:AssumeRole" ]
		    } ]
		},
		"Path": "/"
	    }
	},
	"WebServerRolePolicy": {
	    "Type": "AWS::IAM::Policy",
	    "Properties": {
		"PolicyName" : "WebServerRole",
		"PolicyDocument" : {
		    "Statement"  : [ {
			"Effect"   : "Allow",
			"Action"   : "elasticache:DescribeCacheClusters",
			"Resource" : "*"
		    } ]
		},
		"Roles": [ { "Ref": "WebServerRole" } ]
	    }
	},

	"WebServerInstanceProfile": {
	    "Type": "AWS::IAM::InstanceProfile",
	    "Properties": {
		"Path": "/",
		"Roles": [ { "Ref": "WebServerRole" } ]
	    }
	},
	"WebServerSecurityGroup" : {
	    "Type" : "AWS::EC2::SecurityGroup",
	    "Properties" : {
		"GroupDescription" : "Enable HTTP and SSH access",
		"SecurityGroupIngress" : [
		    {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"} },
		    {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"}
		]
	    }      
	},  
	"GPUNode": {
	    "Type": "AWS::EC2::Instance",
	    "Properties": {
		"Tags": [
		    {"Key": "Name",
		     "Value": {"Fn::Join": ["-", [{"Ref": "Service"}, {"Ref": "Environment"}]]}},
		    {"Key": "owner",
		     "Value": {"Ref": "Owner"}}
		],
		"AvailabilityZone": {"Fn::Select": [0, {"Fn::FindInMap": ["RegionToAZ", {"Ref": "AWS::Region"}, "AZ"]}]},
		"EbsOptimized": false,
		"ImageId": {"Ref": "GPUImageId"},
		"InstanceType": {"Ref": "GPUInstanceType"},
		"SecurityGroups" : [ {"Ref" : "WebServerSecurityGroup"} ],
		"KeyName": {"Ref": "KeyName"},
		"UserData": {"Fn::Base64": {"Fn::Join": ["", [
		    "#!/bin/bash\n",
		    "apt-get -y install awscli\n",
		    "cd /home/ubuntu/propeller/\n",
		    "git stash\n",
		    "git pull origin master\n",
		    "cd /home/ubuntu/\n",
		    "aws elasticache describe-cache-clusters ",
                    "         --cache-cluster-id ", {"Ref" : "RedisCluster"},
                    "         --show-cache-node-info --region ", { "Ref" : "AWS::Region" }, " > cacheclusterconfig\n",
		    "mkdir /mnt/tmp",
		    "chmod 777 /mnt/tmp",
		    "rm -rf /tmp",
		    "ln -s /mnt/tmp /tmp"
		]]}}
		
	    }
	},
	"WebServerInstance": {  
	    "Type" : "AWS::EC2::Instance",
	    "Properties": {
		"AvailabilityZone": {"Fn::Select": [0, {"Fn::FindInMap": ["RegionToAZ", {"Ref": "AWS::Region"}, "AZ"]}]},
		"EbsOptimized": false,
		"ImageId" : { "Ref": "WebImageId" },
		"InstanceType"   : { "Ref" : "WebInstanceType" },
		"SecurityGroups" : [ {"Ref" : "WebServerSecurityGroup"} ],
		"KeyName"        : { "Ref" : "KeyName" },
		"IamInstanceProfile": { "Ref": "WebServerInstanceProfile" },
		"UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
		    "#!/bin/bash\n",
		    "apt-get -y install awscli\n",
		    "apt-get -y install git\n",
		    "apt-get -y install emacs24-nox\n",
		    "apt-get -y install htop\n",
		    "apt-get -y install python-pip\n",
		    "pip install flask\n",
		    "pip install redis\n",
		    "pip install tornado\n",
		    "cd /home/ubuntu\n",
		    "git clone https://github.com/axeltidemann/propeller.git\n",
		    "aws elasticache describe-cache-clusters ",
                    "         --cache-cluster-id ", {"Ref" : "RedisCluster"},
                    "         --show-cache-node-info --region ", { "Ref" : "AWS::Region" }, " > cacheclusterconfig\n"
		]]}}        
	    }
	}
    },
    "Outputs" : {
	"WebsiteURL" : {
	    "Description" : "Web frontend URL",
	    "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "WebServerInstance", "PublicDnsName" ]} ]] }
	},
	"WebsiteIP" : {
	    "Description" : "Web frontend IP",
	    "Value": { "Fn::GetAtt" : [ "WebServerInstance", "PublicIp" ] }
	},
      	"GPUIP": {
	    "Description": "The public IP of the GPU instance", 
	    "Value": { "Fn::GetAtt" : [ "GPUNode", "PublicIp" ] }
	}

    }
}
